// Code generated by protoc-gen-go.
// source: pb.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	pb.proto

It has these top-level messages:
	GenerateUniqueIdV1Request
	GenerateUniqueIdV1Reply
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GenerateUniqueIdV1Request struct {
	Count uint32 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
}

func (m *GenerateUniqueIdV1Request) Reset()                    { *m = GenerateUniqueIdV1Request{} }
func (m *GenerateUniqueIdV1Request) String() string            { return proto.CompactTextString(m) }
func (*GenerateUniqueIdV1Request) ProtoMessage()               {}
func (*GenerateUniqueIdV1Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GenerateUniqueIdV1Request) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GenerateUniqueIdV1Reply struct {
	Err string   `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	Ids []string `protobuf:"bytes,2,rep,name=ids" json:"ids,omitempty"`
}

func (m *GenerateUniqueIdV1Reply) Reset()                    { *m = GenerateUniqueIdV1Reply{} }
func (m *GenerateUniqueIdV1Reply) String() string            { return proto.CompactTextString(m) }
func (*GenerateUniqueIdV1Reply) ProtoMessage()               {}
func (*GenerateUniqueIdV1Reply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GenerateUniqueIdV1Reply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *GenerateUniqueIdV1Reply) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func init() {
	proto.RegisterType((*GenerateUniqueIdV1Request)(nil), "pb.GenerateUniqueIdV1Request")
	proto.RegisterType((*GenerateUniqueIdV1Reply)(nil), "pb.GenerateUniqueIdV1Reply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for IdGenerater service

type IdGeneraterClient interface {
	GenerateUniqueIdV1(ctx context.Context, in *GenerateUniqueIdV1Request, opts ...grpc.CallOption) (*GenerateUniqueIdV1Reply, error)
}

type idGeneraterClient struct {
	cc *grpc.ClientConn
}

func NewIdGeneraterClient(cc *grpc.ClientConn) IdGeneraterClient {
	return &idGeneraterClient{cc}
}

func (c *idGeneraterClient) GenerateUniqueIdV1(ctx context.Context, in *GenerateUniqueIdV1Request, opts ...grpc.CallOption) (*GenerateUniqueIdV1Reply, error) {
	out := new(GenerateUniqueIdV1Reply)
	err := grpc.Invoke(ctx, "/pb.IdGenerater/GenerateUniqueIdV1", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for IdGenerater service

type IdGeneraterServer interface {
	GenerateUniqueIdV1(context.Context, *GenerateUniqueIdV1Request) (*GenerateUniqueIdV1Reply, error)
}

func RegisterIdGeneraterServer(s *grpc.Server, srv IdGeneraterServer) {
	s.RegisterService(&_IdGenerater_serviceDesc, srv)
}

func _IdGenerater_GenerateUniqueIdV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateUniqueIdV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdGeneraterServer).GenerateUniqueIdV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.IdGenerater/GenerateUniqueIdV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdGeneraterServer).GenerateUniqueIdV1(ctx, req.(*GenerateUniqueIdV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _IdGenerater_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.IdGenerater",
	HandlerType: (*IdGeneraterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GenerateUniqueIdV1",
			Handler:    _IdGenerater_GenerateUniqueIdV1_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb.proto",
}

func init() { proto.RegisterFile("pb.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 159 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x28, 0x48, 0xd2, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x32, 0xe4, 0x92, 0x74, 0x4f, 0xcd, 0x4b,
	0x2d, 0x4a, 0x2c, 0x49, 0x0d, 0xcd, 0xcb, 0x2c, 0x2c, 0x4d, 0xf5, 0x4c, 0x09, 0x33, 0x0c, 0x4a,
	0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe1, 0x62, 0x4d, 0xce, 0x2f, 0xcd, 0x2b, 0x91, 0x60,
	0x54, 0x60, 0xd4, 0xe0, 0x0d, 0x82, 0x70, 0x94, 0x6c, 0xb9, 0xc4, 0xb1, 0x69, 0x29, 0xc8, 0xa9,
	0x14, 0x12, 0xe0, 0x62, 0x4e, 0x2d, 0x2a, 0x02, 0x2b, 0xe7, 0x0c, 0x02, 0x31, 0x41, 0x22, 0x99,
	0x29, 0xc5, 0x12, 0x4c, 0x0a, 0xcc, 0x20, 0x91, 0xcc, 0x94, 0x62, 0xa3, 0x44, 0x2e, 0x6e, 0xcf,
	0x14, 0x98, 0x01, 0x45, 0x42, 0x41, 0x5c, 0x42, 0x98, 0xa6, 0x09, 0xc9, 0xea, 0x15, 0x24, 0xe9,
	0xe1, 0x74, 0x98, 0x94, 0x34, 0x2e, 0xe9, 0x82, 0x9c, 0x4a, 0x25, 0x86, 0x24, 0x36, 0xb0, 0xff,
	0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x7b, 0x47, 0xa4, 0xb3, 0xeb, 0x00, 0x00, 0x00,
}
