// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	PhoneNo              string   `protobuf:"bytes,2,opt,name=PhoneNo,proto3" json:"PhoneNo,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=Password,proto3" json:"Password,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=Email,proto3" json:"Email,omitempty"`
	TrueName             string   `protobuf:"bytes,5,opt,name=TrueName,proto3" json:"TrueName,omitempty"`
	NickName             string   `protobuf:"bytes,6,opt,name=NickName,proto3" json:"NickName,omitempty"`
	BirthDay             string   `protobuf:"bytes,7,opt,name=BirthDay,proto3" json:"BirthDay,omitempty"`
	ChineseZodiac        string   `protobuf:"bytes,8,opt,name=ChineseZodiac,proto3" json:"ChineseZodiac,omitempty"`
	QrImageName          string   `protobuf:"bytes,9,opt,name=QrImageName,proto3" json:"QrImageName,omitempty"`
	Sex                  string   `protobuf:"bytes,10,opt,name=Sex,proto3" json:"Sex,omitempty"`
	HomeAddress          string   `protobuf:"bytes,11,opt,name=HomeAddress,proto3" json:"HomeAddress,omitempty"`
	ImageName            string   `protobuf:"bytes,12,opt,name=ImageName,proto3" json:"ImageName,omitempty"`
	ChatName             string   `protobuf:"bytes,13,opt,name=ChatName,proto3" json:"ChatName,omitempty"`
	ChatPwd              string   `protobuf:"bytes,14,opt,name=ChatPwd,proto3" json:"ChatPwd,omitempty"`
	MtalkNo              string   `protobuf:"bytes,15,opt,name=MtalkNo,proto3" json:"MtalkNo,omitempty"`
	Hometown             string   `protobuf:"bytes,16,opt,name=Hometown,proto3" json:"Hometown,omitempty"`
	Description          string   `protobuf:"bytes,17,opt,name=Description,proto3" json:"Description,omitempty"`
	PlatForm             string   `protobuf:"bytes,18,opt,name=PlatForm,proto3" json:"PlatForm,omitempty"`
	UUID                 string   `protobuf:"bytes,19,opt,name=UUID,proto3" json:"UUID,omitempty"`
	OpenId               string   `protobuf:"bytes,20,opt,name=OpenId,proto3" json:"OpenId,omitempty"`
	BackgroundImg        string   `protobuf:"bytes,21,opt,name=BackgroundImg,proto3" json:"BackgroundImg,omitempty"`
	WechatUid            string   `protobuf:"bytes,22,opt,name=Wechat_uid,json=WechatUid,proto3" json:"Wechat_uid,omitempty"`
	WechatName           string   `protobuf:"bytes,23,opt,name=Wechat_name,json=WechatName,proto3" json:"Wechat_name,omitempty"`
	WechatIconurl        string   `protobuf:"bytes,24,opt,name=Wechat_iconurl,json=WechatIconurl,proto3" json:"Wechat_iconurl,omitempty"`
	WechatGender         string   `protobuf:"bytes,25,opt,name=Wechat_gender,json=WechatGender,proto3" json:"Wechat_gender,omitempty"`
	QQUid                string   `protobuf:"bytes,26,opt,name=QQ_uid,json=QQUid,proto3" json:"QQ_uid,omitempty"`
	QQName               string   `protobuf:"bytes,27,opt,name=QQ_name,json=QQName,proto3" json:"QQ_name,omitempty"`
	QQIconurl            string   `protobuf:"bytes,28,opt,name=QQ_iconurl,json=QQIconurl,proto3" json:"QQ_iconurl,omitempty"`
	QQGender             string   `protobuf:"bytes,29,opt,name=QQ_gender,json=QQGender,proto3" json:"QQ_gender,omitempty"`
	IsWater              string   `protobuf:"bytes,30,opt,name=IsWater,proto3" json:"IsWater,omitempty"`
	Volunteer            string   `protobuf:"bytes,31,opt,name=volunteer,proto3" json:"volunteer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRequest) Reset()         { *m = UserRequest{} }
func (m *UserRequest) String() string { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()    {}
func (*UserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{0}
}

func (m *UserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRequest.Unmarshal(m, b)
}
func (m *UserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRequest.Marshal(b, m, deterministic)
}
func (m *UserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRequest.Merge(m, src)
}
func (m *UserRequest) XXX_Size() int {
	return xxx_messageInfo_UserRequest.Size(m)
}
func (m *UserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRequest proto.InternalMessageInfo

func (m *UserRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserRequest) GetPhoneNo() string {
	if m != nil {
		return m.PhoneNo
	}
	return ""
}

func (m *UserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserRequest) GetTrueName() string {
	if m != nil {
		return m.TrueName
	}
	return ""
}

func (m *UserRequest) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *UserRequest) GetBirthDay() string {
	if m != nil {
		return m.BirthDay
	}
	return ""
}

func (m *UserRequest) GetChineseZodiac() string {
	if m != nil {
		return m.ChineseZodiac
	}
	return ""
}

func (m *UserRequest) GetQrImageName() string {
	if m != nil {
		return m.QrImageName
	}
	return ""
}

func (m *UserRequest) GetSex() string {
	if m != nil {
		return m.Sex
	}
	return ""
}

func (m *UserRequest) GetHomeAddress() string {
	if m != nil {
		return m.HomeAddress
	}
	return ""
}

func (m *UserRequest) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

func (m *UserRequest) GetChatName() string {
	if m != nil {
		return m.ChatName
	}
	return ""
}

func (m *UserRequest) GetChatPwd() string {
	if m != nil {
		return m.ChatPwd
	}
	return ""
}

func (m *UserRequest) GetMtalkNo() string {
	if m != nil {
		return m.MtalkNo
	}
	return ""
}

func (m *UserRequest) GetHometown() string {
	if m != nil {
		return m.Hometown
	}
	return ""
}

func (m *UserRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UserRequest) GetPlatForm() string {
	if m != nil {
		return m.PlatForm
	}
	return ""
}

func (m *UserRequest) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *UserRequest) GetOpenId() string {
	if m != nil {
		return m.OpenId
	}
	return ""
}

func (m *UserRequest) GetBackgroundImg() string {
	if m != nil {
		return m.BackgroundImg
	}
	return ""
}

func (m *UserRequest) GetWechatUid() string {
	if m != nil {
		return m.WechatUid
	}
	return ""
}

func (m *UserRequest) GetWechatName() string {
	if m != nil {
		return m.WechatName
	}
	return ""
}

func (m *UserRequest) GetWechatIconurl() string {
	if m != nil {
		return m.WechatIconurl
	}
	return ""
}

func (m *UserRequest) GetWechatGender() string {
	if m != nil {
		return m.WechatGender
	}
	return ""
}

func (m *UserRequest) GetQQUid() string {
	if m != nil {
		return m.QQUid
	}
	return ""
}

func (m *UserRequest) GetQQName() string {
	if m != nil {
		return m.QQName
	}
	return ""
}

func (m *UserRequest) GetQQIconurl() string {
	if m != nil {
		return m.QQIconurl
	}
	return ""
}

func (m *UserRequest) GetQQGender() string {
	if m != nil {
		return m.QQGender
	}
	return ""
}

func (m *UserRequest) GetIsWater() string {
	if m != nil {
		return m.IsWater
	}
	return ""
}

func (m *UserRequest) GetVolunteer() string {
	if m != nil {
		return m.Volunteer
	}
	return ""
}

type UserReply struct {
	Data                 map[string]*UserRequest `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Code                 string                  `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Err                  string                  `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *UserReply) Reset()         { *m = UserReply{} }
func (m *UserReply) String() string { return proto.CompactTextString(m) }
func (*UserReply) ProtoMessage()    {}
func (*UserReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{1}
}

func (m *UserReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserReply.Unmarshal(m, b)
}
func (m *UserReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserReply.Marshal(b, m, deterministic)
}
func (m *UserReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserReply.Merge(m, src)
}
func (m *UserReply) XXX_Size() int {
	return xxx_messageInfo_UserReply.Size(m)
}
func (m *UserReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UserReply.DiscardUnknown(m)
}

var xxx_messageInfo_UserReply proto.InternalMessageInfo

func (m *UserReply) GetData() map[string]*UserRequest {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UserReply) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *UserReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type Users struct {
	Users                []*UserRequest `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Users) Reset()         { *m = Users{} }
func (m *Users) String() string { return proto.CompactTextString(m) }
func (*Users) ProtoMessage()    {}
func (*Users) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{2}
}

func (m *Users) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Users.Unmarshal(m, b)
}
func (m *Users) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Users.Marshal(b, m, deterministic)
}
func (m *Users) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Users.Merge(m, src)
}
func (m *Users) XXX_Size() int {
	return xxx_messageInfo_Users.Size(m)
}
func (m *Users) XXX_DiscardUnknown() {
	xxx_messageInfo_Users.DiscardUnknown(m)
}

var xxx_messageInfo_Users proto.InternalMessageInfo

func (m *Users) GetUsers() []*UserRequest {
	if m != nil {
		return m.Users
	}
	return nil
}

type UsersReply struct {
	Data                 map[string]*Users `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Code                 string            `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Err                  string            `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UsersReply) Reset()         { *m = UsersReply{} }
func (m *UsersReply) String() string { return proto.CompactTextString(m) }
func (*UsersReply) ProtoMessage()    {}
func (*UsersReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{3}
}

func (m *UsersReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsersReply.Unmarshal(m, b)
}
func (m *UsersReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsersReply.Marshal(b, m, deterministic)
}
func (m *UsersReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsersReply.Merge(m, src)
}
func (m *UsersReply) XXX_Size() int {
	return xxx_messageInfo_UsersReply.Size(m)
}
func (m *UsersReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UsersReply.DiscardUnknown(m)
}

var xxx_messageInfo_UsersReply proto.InternalMessageInfo

func (m *UsersReply) GetData() map[string]*Users {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UsersReply) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *UsersReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*UserRequest)(nil), "pb.UserRequest")
	proto.RegisterType((*UserReply)(nil), "pb.UserReply")
	proto.RegisterMapType((map[string]*UserRequest)(nil), "pb.UserReply.DataEntry")
	proto.RegisterType((*Users)(nil), "pb.Users")
	proto.RegisterType((*UsersReply)(nil), "pb.UsersReply")
	proto.RegisterMapType((map[string]*Users)(nil), "pb.UsersReply.DataEntry")
}

func init() { proto.RegisterFile("pb.proto", fileDescriptor_f80abaa17e25ccc8) }

var fileDescriptor_f80abaa17e25ccc8 = []byte{
	// 712 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xdd, 0x4e, 0x23, 0x37,
	0x14, 0x26, 0x40, 0x12, 0x72, 0x02, 0x81, 0xba, 0xfc, 0xb8, 0x01, 0x0a, 0x4a, 0x8b, 0x84, 0x44,
	0x15, 0x55, 0xe9, 0x4d, 0xd5, 0x3b, 0x42, 0x68, 0x99, 0x8b, 0x66, 0x71, 0xd8, 0x08, 0x69, 0x6f,
	0x90, 0x33, 0xb6, 0x92, 0x51, 0x92, 0xf1, 0xac, 0xc7, 0x03, 0x9b, 0x67, 0xd8, 0xd7, 0xd8, 0x8b,
	0x7d, 0x9c, 0x7d, 0xa4, 0x95, 0x7d, 0x3c, 0x09, 0x59, 0xa4, 0x15, 0xd2, 0xde, 0x9d, 0xef, 0xfb,
	0xfc, 0xf9, 0xfc, 0xf8, 0x07, 0x36, 0x92, 0x41, 0x33, 0xd1, 0xca, 0x28, 0xb2, 0x9a, 0x0c, 0x1a,
	0x1f, 0xcb, 0x50, 0xed, 0xa7, 0x52, 0xf7, 0xe4, 0xfb, 0x4c, 0xa6, 0x86, 0xec, 0x43, 0xc9, 0xc2,
	0x40, 0xd0, 0xc2, 0x69, 0xe1, 0xbc, 0xd2, 0xf3, 0x88, 0x50, 0x28, 0xdf, 0x8e, 0x54, 0x2c, 0xbb,
	0x8a, 0xae, 0x3a, 0x21, 0x87, 0xa4, 0x0e, 0x1b, 0xb7, 0x3c, 0x4d, 0x9f, 0x94, 0x16, 0x74, 0xcd,
	0x49, 0x73, 0x4c, 0x76, 0xa1, 0x78, 0x3d, 0xe5, 0xd1, 0x84, 0xae, 0x3b, 0x01, 0x81, 0x75, 0xbc,
	0xd5, 0x99, 0xec, 0xf2, 0xa9, 0xa4, 0x45, 0x74, 0xe4, 0xd8, 0x6a, 0xdd, 0x28, 0x1c, 0x3b, 0xad,
	0x84, 0x5a, 0x8e, 0xad, 0xd6, 0x8e, 0xb4, 0x19, 0x75, 0xf8, 0x8c, 0x96, 0x51, 0xcb, 0x31, 0xf9,
	0x1d, 0xb6, 0xae, 0x46, 0x51, 0x2c, 0x53, 0xf9, 0x4e, 0x89, 0x88, 0x87, 0x74, 0xc3, 0x2d, 0x58,
	0x26, 0xc9, 0x29, 0x54, 0x99, 0x0e, 0xa6, 0x7c, 0x88, 0xc9, 0x2b, 0x6e, 0xcd, 0x73, 0x8a, 0xec,
	0xc0, 0xda, 0x9d, 0xfc, 0x40, 0xc1, 0x29, 0x36, 0xb4, 0x9e, 0x1b, 0x35, 0x95, 0x97, 0x42, 0x68,
	0x99, 0xa6, 0xb4, 0x8a, 0x9e, 0x67, 0x14, 0x39, 0x82, 0xca, 0x62, 0xcf, 0x4d, 0xa7, 0x2f, 0x08,
	0x5b, 0xf5, 0xd5, 0x88, 0x1b, 0x27, 0x6e, 0x61, 0xd5, 0x39, 0xb6, 0x53, 0xb5, 0xf1, 0xed, 0x93,
	0xa0, 0x35, 0x9c, 0xaa, 0x87, 0x56, 0xf9, 0xdf, 0xf0, 0xc9, 0xb8, 0xab, 0xe8, 0x36, 0x2a, 0x1e,
	0xda, 0xfd, 0x6c, 0x72, 0xa3, 0x9e, 0x62, 0xba, 0x83, 0xfb, 0xe5, 0xd8, 0xd6, 0xda, 0x91, 0x69,
	0xa8, 0xa3, 0xc4, 0x44, 0x2a, 0xa6, 0x3f, 0x61, 0xad, 0xcf, 0x28, 0x77, 0x5a, 0x13, 0x6e, 0xfe,
	0x55, 0x7a, 0x4a, 0x89, 0x3f, 0x2d, 0x8f, 0x09, 0x81, 0xf5, 0x7e, 0x3f, 0xe8, 0xd0, 0x9f, 0x1d,
	0xef, 0x62, 0x7b, 0x1f, 0xde, 0x24, 0x32, 0x0e, 0x04, 0xdd, 0xc5, 0xfb, 0x80, 0xc8, 0xce, 0xbb,
	0xcd, 0xc3, 0xf1, 0x50, 0xab, 0x2c, 0x16, 0xc1, 0x74, 0x48, 0xf7, 0x70, 0xde, 0x4b, 0x24, 0x39,
	0x06, 0xb8, 0x97, 0xe1, 0x88, 0x9b, 0x87, 0x2c, 0x12, 0x74, 0x1f, 0x47, 0x83, 0x4c, 0x3f, 0x12,
	0xe4, 0x04, 0xaa, 0x5e, 0x8e, 0xed, 0x74, 0x0e, 0x9c, 0xee, 0x1d, 0x6e, 0x3e, 0x67, 0x50, 0xf3,
	0x0b, 0xa2, 0x50, 0xc5, 0x99, 0x9e, 0x50, 0x8a, 0x69, 0x90, 0x0d, 0x90, 0x24, 0xbf, 0x81, 0x27,
	0x1e, 0x86, 0x32, 0x16, 0x52, 0xd3, 0x5f, 0xdc, 0xaa, 0x4d, 0x24, 0xff, 0x73, 0x1c, 0xd9, 0x83,
	0x12, 0x63, 0xae, 0x8e, 0x3a, 0x5e, 0x46, 0xc6, 0x6c, 0x0d, 0x07, 0x50, 0x66, 0x0c, 0xf3, 0x1f,
	0x62, 0x87, 0x8c, 0xb9, 0xdc, 0xc7, 0x00, 0x8c, 0xcd, 0xf3, 0x1e, 0x61, 0xed, 0x8c, 0xe5, 0x39,
	0x0f, 0xa1, 0xc2, 0x58, 0x9e, 0xef, 0x18, 0x27, 0xc9, 0x98, 0xcf, 0x45, 0xa1, 0x1c, 0xa4, 0xf7,
	0xdc, 0x48, 0x4d, 0x7f, 0xc5, 0xd3, 0xf3, 0xd0, 0xde, 0x95, 0x47, 0x35, 0xc9, 0x62, 0x23, 0xa5,
	0xa6, 0x27, 0xb8, 0xe9, 0x9c, 0x68, 0x7c, 0x2e, 0x40, 0x05, 0x5f, 0x63, 0x32, 0x99, 0x91, 0x0b,
	0x58, 0x17, 0xdc, 0x70, 0x5a, 0x38, 0x5d, 0x3b, 0xaf, 0xb6, 0x0e, 0x9a, 0xc9, 0xa0, 0x39, 0x17,
	0x9b, 0x1d, 0x6e, 0xf8, 0x75, 0x6c, 0xf4, 0xac, 0xe7, 0x16, 0xd9, 0xc3, 0x0b, 0x95, 0x90, 0xfe,
	0x75, 0xba, 0xd8, 0x5e, 0x66, 0xa9, 0xb5, 0x7f, 0x95, 0x36, 0xac, 0xdf, 0x40, 0x65, 0x6e, 0xb4,
	0xf2, 0x58, 0xce, 0xfc, 0x43, 0xb7, 0x21, 0x39, 0x83, 0xe2, 0x23, 0x9f, 0x64, 0xb8, 0x4b, 0xb5,
	0xb5, 0xbd, 0x48, 0xe9, 0x7e, 0x87, 0x1e, 0xaa, 0xff, 0xac, 0xfe, 0x5d, 0x68, 0x34, 0xa1, 0x68,
	0x95, 0xd4, 0x7a, 0x32, 0x1b, 0xf8, 0x32, 0x5f, 0x7a, 0x9c, 0xda, 0xf8, 0x54, 0x00, 0x70, 0x06,
	0xec, 0xed, 0x8f, 0xa5, 0xde, 0x68, 0x6e, 0x4a, 0x7f, 0xa4, 0xb9, 0xf6, 0xf7, 0x9b, 0x3b, 0x59,
	0x6e, 0xae, 0xb2, 0xc8, 0xb9, 0x68, 0xab, 0xf5, 0xa5, 0x80, 0xff, 0xe1, 0x9d, 0xd4, 0x8f, 0x51,
	0x28, 0x49, 0x0b, 0x6a, 0x77, 0x92, 0xeb, 0x70, 0x64, 0xc9, 0xf6, 0x2c, 0x10, 0xe4, 0xdb, 0x06,
	0xeb, 0x5b, 0x4b, 0x07, 0xd3, 0x58, 0x21, 0x7f, 0x42, 0x75, 0xe1, 0x49, 0x5f, 0x1a, 0x6a, 0xcb,
	0xdd, 0x36, 0x56, 0xc8, 0x05, 0x94, 0x2f, 0x85, 0xb0, 0xd4, 0x2b, 0xb6, 0x6f, 0x02, 0xf4, 0x13,
	0xc1, 0x8d, 0x7c, 0xdd, 0xfa, 0x41, 0xc9, 0xfd, 0xf6, 0x7f, 0x7d, 0x0d, 0x00, 0x00, 0xff, 0xff,
	0x45, 0x24, 0xeb, 0x5b, 0xf9, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	SearchUserById(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserReply, error)
	SearchUsers(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UsersReply, error)
	AddUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserReply, error)
	UpdateUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserReply, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) SearchUserById(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserReply, error) {
	out := new(UserReply)
	err := c.cc.Invoke(ctx, "/pb.UserService/SearchUserById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) SearchUsers(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UsersReply, error) {
	out := new(UsersReply)
	err := c.cc.Invoke(ctx, "/pb.UserService/SearchUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) AddUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserReply, error) {
	out := new(UserReply)
	err := c.cc.Invoke(ctx, "/pb.UserService/AddUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserReply, error) {
	out := new(UserReply)
	err := c.cc.Invoke(ctx, "/pb.UserService/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	SearchUserById(context.Context, *UserRequest) (*UserReply, error)
	SearchUsers(context.Context, *UserRequest) (*UsersReply, error)
	AddUser(context.Context, *UserRequest) (*UserReply, error)
	UpdateUser(context.Context, *UserRequest) (*UserReply, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_SearchUserById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).SearchUserById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserService/SearchUserById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).SearchUserById(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_SearchUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).SearchUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserService/SearchUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).SearchUsers(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserService/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).AddUser(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserService/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateUser(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchUserById",
			Handler:    _UserService_SearchUserById_Handler,
		},
		{
			MethodName: "SearchUsers",
			Handler:    _UserService_SearchUsers_Handler,
		},
		{
			MethodName: "AddUser",
			Handler:    _UserService_AddUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _UserService_UpdateUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb.proto",
}
